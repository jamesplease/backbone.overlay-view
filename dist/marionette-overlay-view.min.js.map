{"version":3,"sources":["/source/marionette-overlay-view.js","/source/src/marionette-overlay-view.js"],"names":["global","factory","exports","module","require","define","amd","OverlayView","Mn","this","ItemView","extend","className","template","events","click","isDisplaying","_isDisplaying","display","triggerMethod","$el","removeClass","hide","addClass","_handleClick","e","clickedSelf","target","currentTarget","eventName","marionette_overlay_view"],"mappings":"CAAC,SAAUA,EAAQC,GACE,gBAAZC,UAA0C,mBAAXC,QAAyBA,OAAOD,QAAUD,EAAQG,QAAQ,wBAC9E,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,uBAAwBJ,GAC7ED,EAAOO,YAAcN,EAAQD,EAAOQ,KACpCC,KAAM,SAAUD,GAAM,YCFxB,IAAID,GAAcC,EAAGE,SAASC,QAC5BC,UAAW,iCAIXC,UAAU,EAGVC,QACEC,MAAO,gBAKTC,aAAY,WACV,MAAOP,MAAKQ,eAIdC,QAAO,WACL,MAAIT,MAAKQ,cAAT,QACAR,KAAKU,cAAc,kBACnBV,KAAKQ,eAAgB,EACrBR,KAAKW,IAAIC,YAAY,qBACrBZ,KAAKU,cAAc,WACZV,OAITa,KAAI,WACF,MAAKb,MAAKQ,eACVR,KAAKU,cAAc,eACnBV,KAAKQ,eAAgB,EACrBR,KAAKW,IAAIG,SAAS,qBAClBd,KAAKU,cAAc,QACZV,MALP,QASFQ,eAAe,EAKfO,aAAY,SAACC,GACX,GAAIC,GAAcD,EAAEE,SAAWF,EAAEG,cAC7BC,EAAYH,EAAc,QAAU,aACxCjB,MAAKU,cAAcU,GAGfH,GAAejB,KAAKO,gBACtBP,KAAKa,SArDXd,GAAAD,YAAAA,CAAA,IAAAuB,GAAAvB,CDkEE,OAAOuB","file":"marionette-overlay-view.min.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('backbone.marionette')) :\n  typeof define === 'function' && define.amd ? define(['backbone.marionette'], factory) :\n  global.OverlayView = factory(global.Mn)\n}(this, function (Mn) { 'use strict';\n\n  var OverlayView = Mn.ItemView.extend({\n    className: 'overlay-view overlay-view-hide',\n\n    // The OverlayView doesn't need a template: it's simply an element\n    // that covers up the entirety of the application\n    template: false,\n\n    // Convert DOM click events into BB Events\n    events: {\n      click: '_handleClick'\n    },\n\n    // Returns a Boolean indicating whether or not the view is currently\n    // displaying\n    isDisplaying() {\n      return this._isDisplaying;\n    },\n\n    // Show the overlay\n    display() {\n      if (this._isDisplaying) { return; }\n      this.triggerMethod('before:display');\n      this._isDisplaying = true;\n      this.$el.removeClass('overlay-view-hide');\n      this.triggerMethod('display');\n      return this;\n    },\n\n    // Hide the overlay\n    hide() {\n      if (!this._isDisplaying) { return; }\n      this.triggerMethod('before:hide');\n      this._isDisplaying = false;\n      this.$el.addClass('overlay-view-hide');\n      this.triggerMethod('hide');\n      return this;\n    },\n\n    // Whether or not the overlayView is displayed\n    _isDisplaying: false,\n\n    // Emit the `click` event if the overlay is clicked directly.\n    // Otherwise, emit a `click:child` event. Then, hide the view\n    // if it is displayed.\n    _handleClick(e) {\n      var clickedSelf = e.target === e.currentTarget;\n      var eventName = clickedSelf ? 'click' : 'click:child';\n      this.triggerMethod(eventName);\n\n      // Hide the view, if it's being displayed\n      if (clickedSelf && this.isDisplaying()) {\n        this.hide();\n      }\n    }\n  });\n\n  Mn.OverlayView = OverlayView;\n\n  var marionette_overlay_view = OverlayView;\n\n  return marionette_overlay_view;\n\n}));\n","import Mn from 'backbone.marionette';\n\nvar OverlayView = Mn.ItemView.extend({\n  className: 'overlay-view overlay-view-hide',\n\n  // The OverlayView doesn't need a template: it's simply an element\n  // that covers up the entirety of the application\n  template: false,\n\n  // Convert DOM click events into BB Events\n  events: {\n    click: '_handleClick'\n  },\n\n  // Returns a Boolean indicating whether or not the view is currently\n  // displaying\n  isDisplaying() {\n    return this._isDisplaying;\n  },\n\n  // Show the overlay\n  display() {\n    if (this._isDisplaying) { return; }\n    this.triggerMethod('before:display');\n    this._isDisplaying = true;\n    this.$el.removeClass('overlay-view-hide');\n    this.triggerMethod('display');\n    return this;\n  },\n\n  // Hide the overlay\n  hide() {\n    if (!this._isDisplaying) { return; }\n    this.triggerMethod('before:hide');\n    this._isDisplaying = false;\n    this.$el.addClass('overlay-view-hide');\n    this.triggerMethod('hide');\n    return this;\n  },\n\n  // Whether or not the overlayView is displayed\n  _isDisplaying: false,\n\n  // Emit the `click` event if the overlay is clicked directly.\n  // Otherwise, emit a `click:child` event. Then, hide the view\n  // if it is displayed.\n  _handleClick(e) {\n    var clickedSelf = e.target === e.currentTarget;\n    var eventName = clickedSelf ? 'click' : 'click:child';\n    this.triggerMethod(eventName);\n\n    // Hide the view, if it's being displayed\n    if (clickedSelf && this.isDisplaying()) {\n      this.hide();\n    }\n  }\n});\n\nMn.OverlayView = OverlayView;\n\nexport default OverlayView;\n"],"sourceRoot":"/source/"}